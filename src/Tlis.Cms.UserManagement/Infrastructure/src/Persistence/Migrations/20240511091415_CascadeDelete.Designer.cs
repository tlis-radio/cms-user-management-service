// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tlis.Cms.UserManagement.Infrastructure.Persistence;

#nullable disable

namespace Tlis.Cms.UserManagement.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(UserManagementDbContext))]
    [Migration("20240511091415_CascadeDelete")]
    partial class CascadeDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cms_user_management")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tlis.Cms.UserManagement.Domain.Entities.Membership", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_membership");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_membership_id");

                    b.ToTable("membership", "cms_user_management");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80126b05-9dab-4709-aa6a-39baa5bafe79"),
                            Status = "Active"
                        },
                        new
                        {
                            Id = new Guid("a7c0bea2-2812-40b6-9836-d4b5accae95a"),
                            Status = "Archive"
                        },
                        new
                        {
                            Id = new Guid("cfaeecff-d26b-44f2-bfa1-c80ab79983a9"),
                            Status = "Postponed"
                        });
                });

            modelBuilder.Entity("Tlis.Cms.UserManagement.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_role");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_role_id");

                    b.ToTable("role", "cms_user_management");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9a9040c-fbbd-4aa6-b0dc-56de7265ee7f"),
                            Name = "system-admin"
                        },
                        new
                        {
                            Id = new Guid("cbec6f46-a2e8-4fb3-a126-fe4e51e5ead2"),
                            Name = "technician"
                        },
                        new
                        {
                            Id = new Guid("ed7cafb5-f2bf-4fbe-972c-18fa4f056b69"),
                            Name = "moderator"
                        },
                        new
                        {
                            Id = new Guid("fab1118e-38b9-4164-b222-66378654fcf4"),
                            Name = "graphic"
                        },
                        new
                        {
                            Id = new Guid("8570d900-396f-4b78-bf69-5065e2fe8acf"),
                            Name = "marketing-pr"
                        },
                        new
                        {
                            Id = new Guid("4971ba3e-5a40-42cf-b9d9-17c49d9da309"),
                            Name = "dramaturge-dj"
                        },
                        new
                        {
                            Id = new Guid("f5bdf1df-8406-44d6-b1a1-942f7bde7b23"),
                            Name = "web-developer"
                        });
                });

            modelBuilder.Entity("Tlis.Cms.UserManagement.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Abouth")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("abouth");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("ExternalId")
                        .HasColumnType("text")
                        .HasColumnName("external_id");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("lastname");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nickname");

                    b.Property<bool>("PreferNicknameOverName")
                        .HasColumnType("boolean")
                        .HasColumnName("prefer_nickname_over_name");

                    b.Property<Guid?>("ProfileImageId")
                        .HasColumnType("uuid")
                        .HasColumnName("profile_image_id");

                    b.HasKey("Id")
                        .HasName("pk_user");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_user_id");

                    b.HasIndex("Firstname", "Lastname", "Nickname")
                        .IsUnique()
                        .HasDatabaseName("ix_user_firstname_lastname_nickname");

                    b.ToTable("user", "cms_user_management");
                });

            modelBuilder.Entity("Tlis.Cms.UserManagement.Domain.Entities.UserMembershipHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("change_date");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("MembershipId")
                        .HasColumnType("uuid")
                        .HasColumnName("membership_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_membership_history");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_user_membership_history_id");

                    b.HasIndex("MembershipId")
                        .HasDatabaseName("ix_user_membership_history_membership_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_membership_history_user_id");

                    b.ToTable("user_membership_history", "cms_user_management");
                });

            modelBuilder.Entity("Tlis.Cms.UserManagement.Domain.Entities.UserRoleHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("FunctionEndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("function_end_date");

                    b.Property<DateTime>("FunctionStartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("function_start_date");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_role_history");

                    b.HasIndex("Id")
                        .HasDatabaseName("ix_user_role_history_id");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_user_role_history_role_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_role_history_user_id");

                    b.ToTable("user_role_history", "cms_user_management");
                });

            modelBuilder.Entity("Tlis.Cms.UserManagement.Domain.Entities.UserMembershipHistory", b =>
                {
                    b.HasOne("Tlis.Cms.UserManagement.Domain.Entities.Membership", "Membership")
                        .WithMany()
                        .HasForeignKey("MembershipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_membership_history_membership_membership_id");

                    b.HasOne("Tlis.Cms.UserManagement.Domain.Entities.User", null)
                        .WithMany("MembershipHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_membership_history_user_user_id");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("Tlis.Cms.UserManagement.Domain.Entities.UserRoleHistory", b =>
                {
                    b.HasOne("Tlis.Cms.UserManagement.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_role_history_role_role_id");

                    b.HasOne("Tlis.Cms.UserManagement.Domain.Entities.User", "User")
                        .WithMany("RoleHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_role_history_user_user_id");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tlis.Cms.UserManagement.Domain.Entities.User", b =>
                {
                    b.Navigation("MembershipHistory");

                    b.Navigation("RoleHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
